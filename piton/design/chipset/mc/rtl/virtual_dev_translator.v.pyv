// ========== Copyright Header Begin ============================================
// Copyright (c) 2019 Princeton University
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of Princeton University nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY PRINCETON UNIVERSITY "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL PRINCETON UNIVERSITY BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// ========== Copyright Header End ============================================

`include "define.tmp.h"

module virt_dev_translator (
    input [`PHY_ADDR_WIDTH-1:0] in_address,
    output reg [`PHY_ADDR_WIDTH-1:0] out_address
);

<%
import pyhplib
import os

devices = pyhplib.ReadDevicesXMLFile()
%>

always @* begin

<%
elseStr = ""

for i in range(1, len(devices)):
    info = devices[i]
    if info["virtual"]:
        outputStr = """
    %sif (in_address >= `PHY_ADDR_WIDTH'h%x && in_address < `PHY_ADDR_WIDTH'h%x + `PHY_ADDR_WIDTH'h%x)""" \
                % (elseStr, info["base"], info["base"], info["length"])
        print(outputStr)
        outputStr = """
    begin
        out_address = in_address - `PHY_ADDR_WIDTH'h%x + `PHY_ADDR_WIDTH'h%x;
    end""" % (info["base"], info["map_to"])
        print(outputStr)
        elseStr = "else "

outputStr = """
    %sbegin
        out_address = in_address;
    end""" % (elseStr)
print(outputStr)
%>
end

endmodule
